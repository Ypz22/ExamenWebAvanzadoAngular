docker build -t  examen .
docker run -dit -p 8082:80 --name c-examen --rm examen
docker image tag examen ypz22/yepez-jefferson-ex2
git push ypz22/yepez-jefferson-ex2

server {
  listen 80;
  server_name localhost;

  root /usr/share/nginx/html;
  index index.html;

  # Para archivos estáticos (asegura que JS tenga el MIME correcto)
  location ~* \.(js|mjs|css|json|ico|png|jpg|jpeg|gif|svg|woff|woff2|ttf|eot|otf)$ {
    try_files $uri =404;
    access_log off;
    add_header Cache-Control "public, max-age=31536000";
  }

  # Para rutas de Angular (SPA fallback)
  location / {
    try_files $uri $uri/ /index.html;
  }
}

# Etapa 1: Construcción
FROM node:20-alpine AS builder
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .
RUN npm run build -- --configuration production

# Etapa 2: Servidor Nginx
FROM nginx:alpine
COPY --from=builder /app/dist/yepez-jefferson-ex2/browser /usr/share/nginx/html

#Usa este archivo para definir cómo responder a las peticiones que lleguen al servidor.
COPY nginx.conf /etc/nginx/conf.d/default.conf

#CMD ["nginx", "-g", "daemon off;"]


node_modules
dist
.git
.gitignore
Dockerfile
docker-compose.yml
README.md